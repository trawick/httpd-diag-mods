* 1st release tasks
** Build testing
*** Windows
**** TODO Create testbed with ASF 2.2, ApacheLounge 2.2, ASF 2.4, ApacheLounge 2.2, PHP with each
**** TODO Create automated test script or checklist, with mechanism for saving results
*** Linux
**** TODO Create testbed with 2.2 and 2.4, PHP with each
**** TODO Create automated test script with mechanism for saving results
**** TODO Compare with output of original mod_whatkilledus and mod_backtrace
*** Solaris, FreeBSD, OS X
**** TODO something similar to Linux
** diag.c/diag.h
*** DONE Add better test coverage to testdiag
*** DONE Remove DIAG_MODE_xxx; either you provide context info or you don't
*** DONE Implement SA_SIGINFO exception info, especially on Solaris where the context can be used for the backtrace
*** DONE Implement ucontext_t on Solaris
*** DONE See if anything better than the Linux API is available on FreeBSD
*** DONE Provide a way to bypass SymInitialize()
*** DONE What to do about SymInitialize() when the caller doesn't handle it?
*** DONE Implement missing features on Windows
*** DONE (handled differently) Make sure we respect platform defines added by httpd
*** DONE Get callers to call backtrace at startup to force loading of native functions so that dynamic linker isn't used in a signal handler.
*** TODO Tiny automated regression test for 32-bit and 64-bit.
** mod_backtrace.c/mod_backtrace.h
*** DONE Handle SymInitialize() on Windows with warnings for missing .pdb files for httpd, automatically adding to existing symbol path, etc.
*** DONE Add error log handler for 2.2
*** DONE Add a way to control backtrace in error log based on severity and string matching and maybe APR error code
*** DONE Change backtrace-handler to generate backtrace in different flavors for automated regression testing
*** TODO Tiny automated regression test for 32-bit and 64-bit.
** mod_whatkilledus.c
*** DONE Ensure that only the first crashing thread in the process gets to do any work
*** DONE Create a log file to contain crash reports
*** DONE Exit with error if EnableExceptionHook is not on (Unix only)
*** TODO Implement the original mod_whatkilledus feature, with ways to filter out certain logging.
*** DONE Don't compile in the crash handler by default.
*** DONE Back out the exception filter as appropriate.
** Web site
*** TODO Create it!
*** TODO Migrate old information from http://people.apache.org/~trawick/
*** TODO Create release mechanism, document how to build
**** Need /usr/ports/devel/libexecinfo on FreeBSD
*** TODO Document portability issues
**** Garbage with DIAG_WRITE_FD on FreeBSD; see http://lists.freebsd.org/pipermail/freebsd-ports-bugs/2012-March/230175.html
*** TODO Create notes about the APIs for mod_backtrace and diag
Essentially: The API is not frozen.  Let me know if you use this.
*** TODO Credit where credit is due
http://free-electrons.com/pub/video/2008/ols/ols2008-gilad-ben-yossef-fault-handlers.ogg
mod_log_forensic
*** Monetize!
**** Sell ads.
**** Ask for money.
If you or your employer is using one of these modules to increase revenue
of any kind, decrease expenses, or improve customer satisfaction, please
e-mail info@emptyhammock.com to see how you can help continue the 
development of this software.

If a custom version of these modules for distribution with your product
or from your site would enhance your product, please contact
info@emptyhammock.com.

If testing of these modules with your product would help, yadayadayada.
* 2nd release tasks
** diag.c/diag.h
*** TODO Document API
*** TODO ucontext_t on Linux and other non-Solaris Unix?
*** TODO Two forms of callback: formatted string and fields
*** TODO Implement DIAG_BTFIELDS_LINENUM for Windows
*** TODO Automate testing
*** TODO Rationalize when to write to FD using native feature
*** TODO Work around FreeBSD issue writing to FD using native feature
*** TODO Create feature defines to avoid #if-PLATFORM in client code
*** TODO Document that backtrace_symbols() is not async-signal safe.
*** TODO Use __malloc_hook/__realloc_hook or similar to see if malloc() is being used within the signal handler.
*** TODO Windows, SymGetModuleInfo64
** mod_whatkilledus.c
*** Allow log file to be customized.
* httpd enhancements
** Unix: use SA_SIGINFO, add siginfo_t to exception info
** Windows: implement exception hook
